apiVersion: apps/v1
kind: Deployment
metadata:
  name: reliable-web-backend
  namespace: default
spec:
  replicas: 4
  selector:
    matchLabels:
      run: reliable-web-backend
  template:
    metadata:
      labels:
        run: reliable-web-backend
    spec:
      containers:
      - image: liujordan/reliable-backend:v4.0.0.BAD
        imagePullPolicy: IfNotPresent
        name: reliable-web-backend
        ports:
        - containerPort: 3000
          protocol: TCP
        env:
        - name: SECRET_KEY_BASE
          value: "Hello from the environment"
        - name: VERSION
          value: v4.0.0.BAD
        volumeMounts:
        - mountPath: /usr/src/app/config/database.yml
          name: config
          subPath: database.yml
        - mountPath: /usr/src/app/config/elastic_apm.yml
          name: config
          subPath: elastic_apm.yml
      imagePullSecrets:
        - name: github-registry-secret
      volumes:
      - name: config
        configMap:
          name: repliable-backend-configuration
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: reliable-web-backend
  annotations:
    cert-manager.io/issuer: "letsencrypt-staging"
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: kube1.deployingreliable.software
      http:
        paths:
          - path: /
            backend:
              serviceName: reliable-web-backend
              servicePort: 3000
  tls:
    - hosts:
        - backend.deployingreliable.software
      secretName: backend.deployingreliable.software

---
apiVersion: v1
kind: Service
metadata:
  name: reliable-web-backend
  namespace: default
spec:
  type: NodePort
  selector:
    run: reliable-web-backend
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 50000

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: repliable-backend-configuration
data:
  elastic_apm.yml: |
    server_url: http://apm-server.default:8200
    secret_token: ''
  database.yml: |
    # SQLite. Versions 3.8.0 and up are supported.
    #   gem install sqlite3
    #
    #   Ensure the SQLite 3 gem is defined in your Gemfile
    #   gem 'sqlite3'
    #
    default: &default
      adapter: postgresql
      host: postgres.default
      encoding: unicode
      username: postgres
      password: temppass
      pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
      timeout: 5000

    development:
      <<: *default
      # change host to 'localhost' if not running inside container
      database: blog

    # Warning: The database defined as "test" will be erased and
    # re-generated from your development database when you run "rake".
    # Do not set this db to the same as development or production.
    test:
      <<: *default
      database: blog
    production:
      <<: *default
      database: blog
