version: '3.7'
services:
  nginx-proxy:
    container_name: nginx-proxy
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./config/nginx/vhost:/etc/nginx/vhost.d
      - ./config/nginx/html:/usr/share/nginx/html
      - ./config/nginx/certs:/etc/nginx/certs:ro
      - ./config/nginx/certs:/etc/nginx/dhparam
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"
    environment:
      - DEFAULT_HOST=localhost
    networks:
      - web
  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    image: reliable-blog:backend-dev
    volumes:
      - ./backend:/app
      - gems:/usr/local/bundle
    networks:
      - web
    depends_on:
      - db
    environment:
      - VIRTUAL_HOST=backend.localhost
  frontend:
    build:
      context: ./blog-frontend
      dockerfile: dev.Dockerfile
    image: reliable-blog:frontend-dev
    volumes:
      - ./blog-frontend:/app
      - '/app/node_modules'
    networks:
      - web
    environment:
      - VIRTUAL_HOST=localhost
  db:
    image: postgres:12
    volumes:
      - /var/lib/postgresql/data
      - ./config/db:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: blog
      POSTGRES_PASSWORD: blog
      POSTGRES_USER: blog
    networks:
      - web 
networks:
  web:
    driver: bridge
volumes:
  gems:
